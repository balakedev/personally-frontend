{"ast":null,"code":"var _jsxFileName = \"/Users/blakewaldron/Desktop/Personally/personally-frontend/src/user/EditProfile.js\";\nimport React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { read, update } from \"./apiUser\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = data => event => {\n      const value = data === \"photo\" ? event.target.files[0] : event.target.value; //if data is email, then value will be equal to email\n\n      this.userData.set(data, value);\n      this.setState({\n        [data]: value\n      }); //removes error message if they start editing something\n\n      this.setState({\n        error: \"\"\n      });\n    };\n\n    this.clickedSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const _this$state = this.state,\n              firstName = _this$state.firstName,\n              lastName = _this$state.lastName,\n              username = _this$state.username,\n              email = _this$state.email,\n              password = _this$state.password;\n        const user = {\n          name: {\n            firstName,\n            lastName\n          },\n          username,\n          email,\n          password: password || undefined,\n          open: false\n        }; //send request to API\n\n        const userId = this.props.match.params.userId;\n        const token = isAuthenticated().token;\n        update(userId, token, user).then(data => {\n          //   if the data contains an error, set the state\n          if (data.error) {\n            this.setState({\n              error: data.error\n            });\n          } else {\n            this.setState({\n              redirectToProfile: true\n            });\n          }\n        });\n      }\n    };\n\n    this.init = userId => {\n      const token = isAuthenticated().token;\n      read(userId, token).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToProfile: true\n          });\n          console.log(\"Error in updating profile.\");\n        } else {\n          this.setState({\n            id: data._id,\n            firstName: data.name.firstName,\n            lastName: data.name.lastName,\n            username: data.username,\n            email: data.email\n          });\n        }\n      });\n    };\n\n    this.isValid = () => {\n      const _this$state2 = this.state,\n            firstName = _this$state2.firstName,\n            lastName = _this$state2.lastName,\n            username = _this$state2.username,\n            email = _this$state2.email,\n            password = _this$state2.password;\n\n      if (firstName.length === 0) {\n        this.setState({\n          error: \"Name is required.\"\n        });\n        return false;\n      }\n\n      if (lastName.length === 0) {\n        this.setState({\n          error: \"Last name is required.\"\n        });\n        return false;\n      }\n\n      if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        this.setState({\n          error: \"A valid Email is required\"\n        });\n        return false;\n      }\n\n      if (username.length === 0) {\n        this.setState({\n          error: \"username is required.\"\n        });\n        return false;\n      }\n\n      if (password != null) {\n        if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(password)) {\n          this.setState({\n            error: \"Please enter a password with a minimum of eight characters, at least one letter, one number and one special character.\"\n          });\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.signupForm = (firstName, lastName, username, email, password) => React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Display Picture\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"photo\"),\n      type: \"file\",\n      accept: \"image/*\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"firstName\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"last name\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"lastName\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"username\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"username\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"email\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"password\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"password\"),\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.clickedSubmit,\n      className: \"btn btn-raised btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"update\"));\n\n    this.state = {\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      username: null,\n      password: null,\n      redirectToProfile: false,\n      error: \"\",\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.userData = new FormData();\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          id = _this$state3.id,\n          firstName = _this$state3.firstName,\n          lastName = _this$state3.lastName,\n          username = _this$state3.username,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          redirectToProfile = _this$state3.redirectToProfile,\n          error = _this$state3.error,\n          loading = _this$state3.loading;\n\n    if (redirectToProfile) {\n      return React.createElement(Redirect, {\n        to: \"/user/\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container mt-5 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Edit profile\"), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, error), this.signupForm(firstName, lastName, username, email, password), loading ? React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Loading...\") : \"\");\n  }\n\n}\n\nexport default EditProfile;","map":{"version":3,"sources":["/Users/blakewaldron/Desktop/Personally/personally-frontend/src/user/EditProfile.js"],"names":["React","Component","isAuthenticated","read","update","Redirect","EditProfile","constructor","handleChange","data","event","value","target","files","userData","set","setState","error","clickedSubmit","preventDefault","loading","isValid","state","firstName","lastName","username","email","password","user","name","undefined","open","userId","props","match","params","token","then","redirectToProfile","init","console","log","id","_id","length","test","signupForm","componentDidMount","FormData","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { read, update } from \"./apiUser\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      username: null,\n      password: null,\n      redirectToProfile: false,\n      error: \"\",\n      loading: false\n    };\n  }\n\n  handleChange = data => event => {\n    const value = data === \"photo\" ? event.target.files[0] : event.target.value;\n\n    //if data is email, then value will be equal to email\n    this.userData.set(data, value);\n\n    this.setState({ [data]: value });\n    //removes error message if they start editing something\n    this.setState({ error: \"\" });\n  };\n\n  clickedSubmit = event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n    if (this.isValid()) {\n      const { firstName, lastName, username, email, password } = this.state;\n      const user = {\n        name: {\n          firstName,\n          lastName\n        },\n        username,\n        email,\n        password: password || undefined,\n        open: false\n      };\n      //send request to API\n      const userId = this.props.match.params.userId;\n      const token = isAuthenticated().token;\n\n      update(userId, token, user).then(data => {\n        //   if the data contains an error, set the state\n        if (data.error) {\n          this.setState({ error: data.error });\n        } else {\n          this.setState({\n            redirectToProfile: true\n          });\n        }\n      });\n    }\n  };\n\n  init = userId => {\n    const token = isAuthenticated().token;\n    read(userId, token).then(data => {\n      if (data.error) {\n        this.setState({ redirectToProfile: true });\n        console.log(\"Error in updating profile.\");\n      } else {\n        this.setState({\n          id: data._id,\n          firstName: data.name.firstName,\n          lastName: data.name.lastName,\n          username: data.username,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.userData = new FormData();\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n\n  isValid = () => {\n    const { firstName, lastName, username, email, password } = this.state;\n\n    if (firstName.length === 0) {\n      this.setState({ error: \"Name is required.\" });\n      return false;\n    }\n    if (lastName.length === 0) {\n      this.setState({ error: \"Last name is required.\" });\n      return false;\n    }\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      this.setState({\n        error: \"A valid Email is required\"\n      });\n      return false;\n    }\n    if (username.length === 0) {\n      this.setState({ error: \"username is required.\" });\n      return false;\n    }\n    if (password != null) {\n      if (\n        !/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/.test(\n          password\n        )\n      ) {\n        this.setState({\n          error:\n            \"Please enter a password with a minimum of eight characters, at least one letter, one number and one special character.\"\n        });\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  signupForm = (firstName, lastName, username, email, password) => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Display Picture</label>\n        <input\n          onChange={this.handleChange(\"photo\")}\n          type=\"file\"\n          accept=\"image/*\"\n          className=\"form-control\"\n        />\n\n        <label className=\"text-muted\">First name</label>\n        <input\n          onChange={this.handleChange(\"firstName\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={firstName}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">last name</label>\n        <input\n          onChange={this.handleChange(\"lastName\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={lastName}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">username</label>\n        <input\n          onChange={this.handleChange(\"username\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={username}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">email</label>\n        <input\n          onChange={this.handleChange(\"email\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={email}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">password</label>\n        <input\n          onChange={this.handleChange(\"password\")}\n          type=\"password\"\n          className=\"form-control\"\n          value={password}\n        />\n      </div>\n\n      <button\n        onClick={this.clickedSubmit}\n        className=\"btn btn-raised btn-primary\"\n      >\n        update\n      </button>\n    </form>\n  );\n\n  render() {\n    const {\n      id,\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      redirectToProfile,\n      error,\n      loading\n    } = this.state;\n\n    if (redirectToProfile) {\n      return <Redirect to={`/user/${id}`} />;\n    }\n\n    return (\n      <div className=\"container mt-5 mb-5\">\n        <h2>Edit profile</h2>\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n        {this.signupForm(firstName, lastName, username, email, password)}\n        {loading ? <div className=\"loading\">Loading...</div> : \"\"}\n      </div>\n    );\n  }\n}\nexport default EditProfile;\n"]},"metadata":{},"sourceType":"module"}