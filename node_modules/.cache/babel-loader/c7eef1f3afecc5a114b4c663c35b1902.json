{"ast":null,"code":"var _jsxFileName = \"/Users/blakewaldron/Desktop/Personally/personally-frontend/src/user/EditProfile.js\";\nimport React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { read, update } from \"./apiUser\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = data => event => {\n      this.setState({\n        [data]: event.target.value\n      }); //removes error message if they start editing something\n\n      this.setState({\n        error: \"\"\n      });\n    };\n\n    this.clickedSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            firstName = _this$state.firstName,\n            lastName = _this$state.lastName,\n            username = _this$state.username,\n            email = _this$state.email,\n            password = _this$state.password;\n      const user = {\n        name: {\n          firstName,\n          lastName\n        },\n        username,\n        email,\n        password: password || undefined,\n        open: false\n      }; //send request to API\n\n      const userId = this.props.match.params.userId;\n      const token = isAuthenticated().token;\n      update(userId, token, user).then(data => {\n        //   if the data contains an error, set the state\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          this.setState({\n            redirectToProfile: true\n          });\n        }\n      });\n    };\n\n    this.init = userId => {\n      const token = isAuthenticated().token;\n      read(userId, token).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToProfile: true\n          });\n          console.log(\"Error in updating profile.\");\n        } else {\n          this.setState({\n            id: data._id,\n            firstName: data.name.firstName,\n            lastName: data.name.lastName,\n            username: data.username,\n            email: data.email\n          });\n        }\n      });\n    };\n\n    this.signupForm = (firstName, lastName, username, email, password) => React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"firstName\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"last name\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"lastName\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"username\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"username\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"email\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"password\"), React.createElement(\"input\", {\n      onChange: this.handleChange(\"password\"),\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.clickedSubmit,\n      className: \"btn btn-raised btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"update\"));\n\n    this.state = {\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      username: null,\n      password: null,\n      redirectToProfile: false,\n      error: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          id = _this$state2.id,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          redirectToProfile = _this$state2.redirectToProfile;\n\n    if (redirectToProfile) {\n      return React.createElement(Redirect, {\n        to: \"/user/\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container mt-5 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Edit profile\"), this.signupForm(firstName, lastName, username, email, password));\n  }\n\n}\n\nexport default EditProfile;","map":{"version":3,"sources":["/Users/blakewaldron/Desktop/Personally/personally-frontend/src/user/EditProfile.js"],"names":["React","Component","isAuthenticated","read","update","Redirect","EditProfile","constructor","handleChange","data","event","setState","target","value","error","clickedSubmit","preventDefault","state","firstName","lastName","username","email","password","user","name","undefined","open","userId","props","match","params","token","then","redirectToProfile","init","console","log","id","_id","signupForm","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { read, update } from \"./apiUser\";\nimport { Redirect } from \"react-router-dom\";\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      username: null,\n      password: null,\n      redirectToProfile: false,\n      error: \"\"\n    };\n  }\n\n  handleChange = data => event => {\n    this.setState({ [data]: event.target.value });\n    //removes error message if they start editing something\n    this.setState({ error: \"\" });\n  };\n\n  clickedSubmit = event => {\n    event.preventDefault();\n\n    const { firstName, lastName, username, email, password } = this.state;\n    const user = {\n      name: {\n        firstName,\n        lastName\n      },\n      username,\n      email,\n      password: password || undefined,\n      open: false\n    };\n    //send request to API\n    const userId = this.props.match.params.userId;\n    const token = isAuthenticated().token;\n\n    update(userId, token, user).then(data => {\n      //   if the data contains an error, set the state\n      if (data.error) {\n        this.setState({ error: data.error });\n      } else {\n        this.setState({\n          redirectToProfile: true\n        });\n      }\n    });\n  };\n\n  init = userId => {\n    const token = isAuthenticated().token;\n    read(userId, token).then(data => {\n      if (data.error) {\n        this.setState({ redirectToProfile: true });\n        console.log(\"Error in updating profile.\");\n      } else {\n        this.setState({\n          id: data._id,\n          firstName: data.name.firstName,\n          lastName: data.name.lastName,\n          username: data.username,\n          email: data.email\n        });\n      }\n    });\n  };\n  componentDidMount() {\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n  signupForm = (firstName, lastName, username, email, password) => (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">First name</label>\n        <input\n          onChange={this.handleChange(\"firstName\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={firstName}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">last name</label>\n        <input\n          onChange={this.handleChange(\"lastName\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={lastName}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">username</label>\n        <input\n          onChange={this.handleChange(\"username\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={username}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">email</label>\n        <input\n          onChange={this.handleChange(\"email\")}\n          type=\"text\"\n          className=\"form-control\"\n          value={email}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">password</label>\n        <input\n          onChange={this.handleChange(\"password\")}\n          type=\"password\"\n          className=\"form-control\"\n          value={password}\n        />\n      </div>\n\n      <button\n        onClick={this.clickedSubmit}\n        className=\"btn btn-raised btn-primary\"\n      >\n        update\n      </button>\n    </form>\n  );\n\n  render() {\n    const {\n      id,\n      firstName,\n      lastName,\n      username,\n      email,\n      password,\n      redirectToProfile\n    } = this.state;\n\n    if (redirectToProfile) {\n      return <Redirect to={`/user/${id}`} />;\n    }\n    return (\n      <div className=\"container mt-5 mb-5\">\n        <h2>Edit profile</h2>\n        {this.signupForm(firstName, lastName, username, email, password)}\n      </div>\n    );\n  }\n}\nexport default EditProfile;\n"]},"metadata":{},"sourceType":"module"}